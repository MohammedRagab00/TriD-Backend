CREATE TABLE coupons
(
    id                 INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    code               VARCHAR(40) UNIQUE NOT NULL,
    discount_type      SMALLINT           NOT NULL,

    discount_value     DECIMAL(10, 2)     NOT NULL,
    min_spend          DECIMAL(10, 2) DEFAULT 0,
    max_discount       DECIMAL(10, 2),
    usage_limit        INT            DEFAULT 1,
    usage_count        INT            DEFAULT 0,

    valid_from         TIMESTAMP          NOT NULL,
    valid_until        TIMESTAMP          NOT NULL,

    created_date       TIMESTAMP          NOT NULL,
    last_modified_date TIMESTAMP,
    created_by         INT                NOT NULL,
    last_modified_by   INT,

    CONSTRAINT chk_discount_type_values
        CHECK (discount_type IN (0, 1)),
    CONSTRAINT chk_valid_dates
        CHECK (valid_from < valid_until),
    CONSTRAINT chk_discount_value
        CHECK (discount_value > 0),
    CONSTRAINT chk_usage_limit
        CHECK (usage_limit > 0)
);

CREATE TABLE coupon_restrictions
(
    id                INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    coupon_id         INT REFERENCES coupons (id) ON DELETE CASCADE,
    restriction_type  VARCHAR(20) NOT NULL CHECK (restriction_type IN ('store', 'category', 'product', 'user')),
    restriction_value INT         NOT NULL
);

CREATE TABLE orders
(
    id                 INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    customer_id        INT            NOT NULL,
    total_amount       DECIMAL(10, 2) NOT NULL,
    status             VARCHAR(20)    NOT NULL
        CHECK (status IN ('pending', 'failed', 'cancelled', 'processing', 'refunded', 'returned',
                          'out_for_delivery', 'delivered')),
    created_date       TIMESTAMP      NOT NULL,
    last_modified_date TIMESTAMP,
    created_by         INT            NOT NULL,
    last_modified_by   INT,

    FOREIGN KEY (customer_id) REFERENCES users (id)
);

CREATE TABLE coupon_usages
(
    id                 INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    coupon_id          INT REFERENCES coupons (id) ON DELETE CASCADE,
    user_id            INT REFERENCES users (id) ON DELETE CASCADE,
    order_id           INT REFERENCES orders (id) ON DELETE CASCADE,
    created_date       TIMESTAMP NOT NULL,
    last_modified_date TIMESTAMP
);