spring:
  application:
    name: In-Prod
  datasource:
    url: ${POSTGRES_URL}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    open-in-view: false
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
  ai:
    openai:
      api-key: ${AI_API_KEY}
      base-url: ${AI_API_BASE_URL}
      chat:
        options:
          model: ${AI_MODEL}
    vectorstore:
      pgvector:
        initialize-schema: false
  cache:
    type: redis
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
  profiles:
    active: dev
  servlet:
    multipart:
      max-file-size: 300MB
      max-request-size: 300MB
  flyway:
    enabled: true
    user: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
  mail:
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    host: smtp.gmail.com
    port: 587
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          ssl:
            trust: smtp.gmail.com
            protocols: TLSv1.2 TLSv1.3
        timeout: 3000
        connectiontimeout: 5000
        writetimeout: 5000
application:
  security:
    jwt:
      secret-key: ${SECRET_KEY}
      expiration: ${EXPIRATION}
      refresh-token:
        expiration-days: ${EXPIRATION_DAYS}
  mailing:
    frontend:
      url: https://go-trid.vercel.app
springdoc:
  default-produces-media-type: application/json
server:
  servlet:
    context-path: /api/v1/
azure:
  storage:
    connection-string: ${AZURE_CONNECTION_STRING}
    pp-container-name: ${AZURE_PP_CONTAINER_NAME}
    shop-container-name: ${AZURE_SHOP_CONTAINER_NAME}
    product-container-name: ${AZURE_PRODUCT_CONTAINER_NAME}
    model-container-name: ${AZURE_MODEL_CONTAINER_NAME}
